@page "/{control?}"

@using AmadonBlazorLibrary.Data;
@using AmadonStandardLib.Classes;
@using Amadon.Controls;

<div class="container-fluid">
    <LeftColumn @ref=LeftControl ControlName="settings"></LeftColumn>
    <div id="rightColumn" class="black splitRight right mt-0 bg-dark text-white overflow-auto">
        <div class="row overflow-auto">

            @if (@PaperLines != null)
            {
                <table class="table-borderless">
                    <thead>
                        <tr>
                            @foreach (string line in @PaperLines.Titles)
                            {
                                @((MarkupString)@line)
                            }
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (string line in @PaperLines.Lines)
                        {
                            <tr>
                                @((MarkupString)@line)
                            </tr>
                        }

                    </tbody>
                </table>
            }
        </div>
    </div>
</div>



@code {
    private PaperTextFormatted PaperLines { get; set; }

    private bool RedrawAsked { get; set; } = true;

    private LeftColumn LeftControl;

    [Parameter]
    public string control { get; set; } = "";

    [Parameter]
    public string EntryHref { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        EventsControl.RedrawText += EventsControl_RedrawText;
    }

    protected void EventsControl_RedrawText()
    {
        RedrawAsked = true;
    }

    private async void GetTexts()
    {
        if (RedrawAsked)
        {
            await Task.Delay(1);
            RedrawAsked = false;
            PaperLines = await TextService.GetHtml();
            RedrawAsked = false;
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            // Wait for the button to be rendered
            GetTexts();

            if (control == "settings")
            {
                LeftControl.SetControl("settings");
            }
            else if (control == "search")
            {
                LeftControl.SetControl("search");
            }
            else if (control == "help")
            {
                LeftControl.SetControl("help");
            }
            else if (control == "track")
            {
                LeftControl.SetControl("track");
            }
            else if (control == "index")
            {
                LeftControl.SetControl("index");
            }
            else if (control == "toc")
            {
                LeftControl.SetControl("toc");
            }
            else
            {
                
            }
            // initialize the JavaScript interop library after the page has loaded
            //await JSRuntime.InvokeAsync<object>("myInteropLibrary.initialize");
        }
    }

    //<a class="nav-link" href="/?control=text"><span class="oi oi-text" aria-hidden="true"></span> Book Text</a>
    //</li>
    //<li class="nav-item">
    //    <a class="nav-link" href="/?control=toc"><span class="oi oi-list" aria-hidden="true"></span> Table of Contents</a>



}
