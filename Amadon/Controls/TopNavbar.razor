@using AmadonStandardLib.Helpers;
@inject NavigationManager NavigationManager

<style>

    .custom-input-ident {
        width: 180px;
        margin: 4px; /* Spacing around the elements */
    }

    .custom-input-high {
        width: 220px;
        margin: 4px; /* Spacing around the elements */
    }

</style>

<nav class="navbar navbar-expand-sm bg-primary navbar-dark navbarheight fixed-top">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            <img src="studying-icon.png" style="width:40px;" class="rounded-pill">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mynavbar">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse">
            <ul class="navbar-nav me-auto">
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToTOC">
                        <span class="oi oi-list" aria-hidden="true"></span> Table of Contents
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToIndex">
                        <span class="oi oi-star" aria-hidden="true"></span> Index
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToSearch">
                        <span class="oi oi-envelope-closed" aria-hidden="true"></span> Search
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToTrack">
                        <span class="oi oi-location" aria-hidden="true"></span> Track
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToSettings">
                        <span class="oi oi-target" aria-hidden="true"></span> Settings
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LinkToHelp">
                        <span class="oi oi-question-mark" aria-hidden="true"></span> Help
                    </NavLink>
                </li>
            </ul>

            <TextEdit Class="form-control me-2 highlightField custom-input-ident" @bind-Text="@ParagraphIdent" @onkeydown="HandleKeyDownIdent" Placeholder="Paragraph ident" />
            <TextEdit Class="form-control me-2 highlightField custom-input-high" @bind-Text="@ExpressionToSearch" @onkeydown="HandleKeyDownHigh" Placeholder="Expression to highlight" />

        </div>
    </div>
</nav>

@code
{
    private string ExpressionToSearch = "";

    private string ParagraphIdent = "";

    private bool ControlNameValid(string name)
    {
        return name == AmandonComponentNames.ControlSettings ||
               name == AmandonComponentNames.ControlSearch ||
               name == AmandonComponentNames.ControlHelp ||
               name == AmandonComponentNames.ControlTrack ||
               name == AmandonComponentNames.ControlIndex ||
               name == AmandonComponentNames.ControlToc;
    }

    private void HandleKeyDownIdent(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            QuickSearch();
        }
        else if (args.Key == "F1")
        {
            AmadonEvents.ShowHelpPage(AmandonHelpPageNames.MenuBarHelp);
        }
    }


    private void HandleKeyDownHigh(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            QuickSearch();
        }
        else if (args.Key == "F1")
        {
            AmadonEvents.ShowHelpPage(AmandonHelpPageNames.MenuBarHelp);
        }
    }


    private void FireTopNavCommand(string eventName)
    {

        if (ControlNameValid(eventName))
        {
            switch (eventName)
            {
                case AmandonComponentNames.ControlHelp:
                    AmadonEvents.HelpContext();
                    break;
                default:
                    StaticObjects.Parameters.LastLeftControl = eventName;
                    AmadonEvents.TopNavCommand(eventName);
                    break;
            }
        }
    }
    private void LinkToTOC() => FireTopNavCommand(AmandonComponentNames.ControlToc);

    private void LinkToIndex() => FireTopNavCommand(AmandonComponentNames.ControlIndex);

    private void LinkToSearch() => FireTopNavCommand(AmandonComponentNames.ControlSearch);

    private void LinkToTrack() => FireTopNavCommand(AmandonComponentNames.ControlTrack);

    private void LinkToSettings() => FireTopNavCommand(AmandonComponentNames.ControlSettings);

    private void LinkToHelp() => FireTopNavCommand(AmandonComponentNames.ControlHelp);

    private void QuickSearch()
    {
        AmadonEvents.HighlightExpression(ExpressionToSearch);
    }

}