@using AmadonStandardLib.InterchangeData;
@using Blazorise.RichTextEdit

<Modal @ref="modalRef" Class="modal-xl ModalSize fade">
    <ModalContent ElementId="ModalContent" Class="ModalBorder">
        <ModalHeader Class="AmadonDark HeaderColors">
            <ModalTitle>@Title</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody Class="AmadonDark scrollable-modal-body">


            <RichTextEdit @ref="richTextEditRef"
                          Theme="RichTextEditTheme.Snow"
                          PlaceHolder="Type your note here..."
                          ReadOnly="@IsReadOnly"
                          SubmitOnEnter="false"
                          ToolbarPosition="Placement.Top">
                <Toolbar>
                    <RichTextEditToolbarGroup>
                        <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                        <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                        <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                            <RichTextEditToolbarSelectItem Value="small" />
                            <RichTextEditToolbarSelectItem Selected />
                            <RichTextEditToolbarSelectItem Value="large" />
                            <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                        </RichTextEditToolbarSelect>
                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                        <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                    </RichTextEditToolbarGroup>

@*                    <!-- Custom toolbar content -->
                    <RichTextEditToolbarGroup Float="Float.End">
                        <Button onClick="window.open('https://www.quilljs.com/','quilljs')"><Icon Name="IconName.InfoCircle" /></Button>
                        <Button Clicked="@OnSave"><Icon Name="IconName.Save" /></Button>
                    </RichTextEditToolbarGroup>
*@
                    </Toolbar>
                <Editor></Editor>
            </RichTextEdit>

        </ModalBody>
        <ModalFooter Class="AmadonDark">
            <Button Color="Color.Secondary" Clicked="@HideModalCancel">Cancel</Button>
            <Button Color="Color.Primary" Clicked="@HideModalOk">Ok</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {

    private Modal modalRef;
    private string Title { get; set; } = "Notes";
    protected RichTextEdit richTextEditRef;
    protected bool IsReadOnly;
    private UserNote Note = null;

    public void ShowEditNotes(UserNote note, bool readOnly)
    {
        IsReadOnly = readOnly;
        Note = note;
        Title = note.Title;
        richTextEditRef.SetHtmlAsync(note.Notes);

        if (!modalRef.Visible)
        {
            modalRef.Show();
        }
        else
        {
            modalRef.Hide();
            modalRef.Show();
        }
        StateHasChanged();
        Task.Delay(1);
    }

    public Task HideModalCancel()
    {
        return modalRef.Hide();
    }

    public async Task HideModalOk()
    {
        Note.Notes = await richTextEditRef.GetHtmlAsync();
        await richTextEditRef.ClearAsync();
        await modalRef.Hide();
    }


}
