@page "/search"

@using Amadon.Services;
@using AmadonStandardLib.Helpers;
@using AmadonStandardLib.InterchangeData;
@using Blazorise

<Container>
    <Row>
        <Column>
            <h5>Search UB texts for</h5>
            <h5>@CurrentTranslationTitle:</h5>
            <TextEdit @ref="TextToSearchObject" @bind-Text="@PersistentData.SearchData.QueryString" Placeholder="Search the subject index titles..." Size="Size.Small" @onkeydown="HandleKeyDown" />
        </Column>
    </Row>

    <br />
    <Row>
        <Column>
            <Tooltip Text="When on, includes the Part I of the Book in the search" Placement="TooltipPlacement.Bottom">
                <Switch @ref="SwitchPartI" TValue="bool" Checked="@PersistentData.SearchData.Part1Included" CheckedChanged="@OnIncludesPartI">Part I</Switch>
            </Tooltip>
            <Tooltip Text="When on, includes the Part III of the Book in the search" Placement="TooltipPlacement.Bottom">
                <Switch @ref="SwitchPartIII" TValue="bool" Checked="@PersistentData.SearchData.Part3Included" CheckedChanged="@OnIncludesPartIII">Part III</Switch>
            </Tooltip>
        </Column>

        <Column>
            <Tooltip Text="When on, includes the Part II of the Book in the search" Placement="TooltipPlacement.Bottom">
                <Switch @ref="SwitchPartII" TValue="bool" Checked="@PersistentData.SearchData.Part2Included" CheckedChanged="@OnIncludesPartII">Part II</Switch>
            </Tooltip>
            <Tooltip Text="When on, includes the Part IV of the Book in the search" Placement="TooltipPlacement.Bottom">
                <Switch @ref="SwitchPartIV" TValue="bool" Checked="@PersistentData.SearchData.Part4Included" CheckedChanged="@OnIncludesPartIV">Part IV</Switch>
            </Tooltip>
        </Column>
    </Row>
    <Row>
        <Tooltip Text="When on, search only in teh current paper" Placement="TooltipPlacement.Bottom">
            <Switch @ref="SwitchCurrentPaper" TValue="bool" Checked="@PersistentData.SearchData.CurrentPaperOnly" CheckedChanged="@OnSwitchCurrentPaper">Current Paper Only</Switch>
        </Tooltip>
    </Row>
</Container>



@code {
    public delegate void QueryTextDelegate();

    TextEdit TextToSearchObject;

    Switch<bool> SwitchPartI;
    Switch<bool> SwitchPartII;
    Switch<bool> SwitchPartIII;
    Switch<bool> SwitchPartIV;
    Switch<bool> SwitchCurrentPaper;

    private string CurrentTranslationTitle = "";

    public event QueryTextDelegate OnQueryText;

    Task OnIncludesPartI(bool value)
    {
        PersistentData.SearchData.Part1Included = value;
        PersistentData.SearchData.CurrentPaperOnly = false;
        return Task.CompletedTask;
    }

    Task OnIncludesPartII(bool value)
    {
        PersistentData.SearchData.Part2Included = value;
        PersistentData.SearchData.CurrentPaperOnly = false;
        return Task.CompletedTask;
    }

    Task OnIncludesPartIII(bool value)
    {
        PersistentData.SearchData.Part3Included = value;
        PersistentData.SearchData.CurrentPaperOnly = false;
        return Task.CompletedTask;
    }

    Task OnIncludesPartIV(bool value)
    {
        PersistentData.SearchData.Part4Included = value;
        PersistentData.SearchData.CurrentPaperOnly = false;
        return Task.CompletedTask;
    }

    Task OnSwitchCurrentPaper(bool value)
    {
        PersistentData.SearchData.Part1Included = !value;
        PersistentData.SearchData.Part2Included = !value;
        PersistentData.SearchData.Part3Included = !value;
        PersistentData.SearchData.Part4Included = !value;
        PersistentData.SearchData.CurrentPaperOnly = value;
        return Task.CompletedTask;
    }


    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Key == "Enter")
        {

            OnQueryText?.Invoke();
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            CurrentTranslationTitle = StaticObjects.Book.GetTocSearchTranslation().Description;
            StateHasChanged();
        }
    }

}
