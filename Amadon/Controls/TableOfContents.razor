@using Amadon.Services;
@using AmadonStandardLib.Classes;
@using AmadonStandardLib.Helpers;
@using AmadonStandardLib.InterchangeData;
@using AmadonStandardLib.UbClasses;
@using Blazorise.TreeView



@*  Based in:
    https://blazorise.com/docs/extensions/treeview
*@

@if (TocGotFromData)
{
    <TreeView @ref="@treeViewTrans" Nodes="Items"
          GetChildNodes="@(item => item.Children)"
          HasChildNodes="@(item => item.Children?.Any() == true)"
          @bind-SelectedNode="selectedNode"
          @bind-ExpandedNodes="expandedNodes">
        <NodeContent>
            @context.Text
        </NodeContent>
    </TreeView>
}



@code {


    TreeView<ItemForToc> treeViewTrans;
    TOCdata data = new TOCdata();
    bool TocGotFromData = false;
    IEnumerable<ItemForToc> Items = new ItemForToc[0];

    IList<ItemForToc> expandedNodes = new List<ItemForToc>();
    ItemForToc selectedNode;

    public async void UpdateAll()
    {
        data.TranslationId1 = StaticObjects.Parameters.LanguageIDLeftTranslation;
        data.TranslationId2 = StaticObjects.Parameters.LanguageIDMiddleTranslation;
        data.TranslationId3 = StaticObjects.Parameters.LanguageIDRightTranslation;
        data = await TOC_Service.GetTocTable(data);
        Items = data.Toc;
        TocGotFromData = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        UpdateAll();
        await base.OnInitializedAsync();
    }


}
