@using AmadonBlazorLibrary.Data;
@using AmadonStandardLib.Classes;
@using AmadonStandardLib.Helpers;
@using AmadonStandardLib.InterchangeData;
@using AmadonStandardLib.UbClasses;
@using Blazorise.TreeView


<link href="_content/Blazorise.TreeView/blazorise.treeview.css" rel="stylesheet" />


@*  Based in: 
    https://blazorise.com/docs/extensions/treeview
*@


<TreeView @ref="@treeViewTranslation1" Nodes="data.Items"
          GetChildNodes="@(item => item.Children)"
          HasChildNodes="@(item => item.Children?.Any() == true)"
          @bind-SelectedNode="selectedNode"
          @bind-ExpandedNodes="expandedNodes">
    <NodeContent>
        @context.Text
    </NodeContent>
</TreeView>

@code{

    TreeView<Item> treeViewTranslation1;
    TOCdata data = new TOCdata();

    IList<Item> expandedNodes = new List<Item>();
    Item selectedNode;

    public async void UpdateAll()
    {
        data.TranslationId1 = StaticObjects.Parameters.LanguageIDLeftTranslation;
        data.TranslationId2 = StaticObjects.Parameters.LanguageIDMiddleTranslation;
        data.TranslationId3 = StaticObjects.Parameters.LanguageIDRightTranslation;
        data= await TOC_Service.GetTocTable(data);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        UpdateAll();
        await base.OnInitializedAsync();
    }


}
