@using Amadon.Services;
@using AmadonStandardLib.Classes;
@using Amadon.Controls;
@using AmadonStandardLib.Helpers;

<div id="rightColumn" class="black splitRight right mt-0 bg-dark text-white overflow-auto">
    <div class="row overflow-auto">
        @if (@PaperLines != null)
        {
            <table class="table-borderless">
                <thead>
                    <tr>
                        @foreach (string line in @PaperLines.Titles)
                        {
                            @((MarkupString)@line)
                        }
                    </tr>
                </thead>
                <tbody>

                    @foreach (string line in @PaperLines.Lines)
                    {
                        <tr>
                            @((MarkupString)@line)
                        </tr>
                    }

                </tbody>
            </table>
        }
    </div>
</div>



@code {
    private PaperTextFormatted PaperLines { get; set; }

    private bool RedrawAsked { get; set; } = true;

    private LeftColumn LeftControl;

    public string ControlName { get; set; } = "";


    [Parameter]
    public string control { get; set; } = "";

    [Parameter]
    public string EntryHref { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        LibraryEventsControl.RedrawText += EventsControl_RedrawText;
        AmadonEvents.OnTopNavCommand += AmadonEvents_OnTopNavCommand;
    }

    protected void EventsControl_RedrawText()
    {
        RedrawAsked = true;
    }

    private async void GetTexts()
    {
        if (RedrawAsked && StaticObjects.InitializationDone)
        {
            await Task.Delay(1);
            RedrawAsked = false;
            PaperLines = await TextService.GetHtml();
            RedrawAsked = false;
            StateHasChanged();
        }
    }

    private void AmadonEvents_OnTopNavCommand(string controlName)
    {
        ControlName = controlName;
        StateHasChanged();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //GetTexts();
            if (ControlName == "settings")
            {
                LeftControl.SetControl("settings");
            }
        }
    }
}
