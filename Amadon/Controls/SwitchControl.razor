@using AmadonStandardLib.Classes;

<div class="form-check form-switch">
    <label class="form-check-label" for="mySwitch">@LabelText</label>
    <input class="form-check-input" type="checkbox" @bind=@IsToggled>
</div>

@code {

    private string _labelText = "";
    private bool _isToggled = false;

    private bool isChecked;

    public event FieldChangedDelegate FieldChanged = null;

    [Parameter]
    public string LabelText
    {
        get { return _labelText; }
        set { _labelText = value; }
    }

    [Parameter]
    public bool IsToggled
    {
        get { return _isToggled; }
        set 
        { 
            if (_isToggled != value)
            {
                _isToggled = value;
                FieldChanged?.Invoke(_isToggled);
            }
        }
    }

    //private void HandleCheckboxChange(ChangeEventArgs e)
    //{
    //    //  @onchange="HandleCheckboxChange"
    //}

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    //if (firstRender)
    //    //{
    //    //    // Wait for the button to be rendered
    //    //    await Task.Delay(1);
    //    //    StateHasChanged();
    //    //}
    //}



}
