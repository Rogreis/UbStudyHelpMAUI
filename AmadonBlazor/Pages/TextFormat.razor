@page "/TextFormat"
@using AmadonBlazor.Data;
@using System.Text.Json;
@using UbStandardObjects.Objects;
@inject IJSRuntime JS
@inject TextService Service

<table class="table-borderless">
    <thead>
        <tr>
            @foreach (string line in @PaperLines.Titles)
            {
                @((MarkupString)@line)
            }
        </tr>
    </thead>
<tbody>

@foreach (string line in @PaperLines.Lines)
{
    <tr>
        @((MarkupString)@line)
    </tr>
}

</tbody>
</table>


@code {

    [Parameter]
    public PaperText PaperLines { get; set; }

    [Parameter]
    public string Entry { get; set; }

    public class PaperText
    {
        public List<string> Titles { get; set; } = new List<string>();
        public List<string> Lines { get; set; } = new List<string>();
    }


    private async Task<bool> GetParagraphs(string entry)
    {
        string jason = await TextService.GetHtml(entry);
        var options = new JsonSerializerOptions
            {
                AllowTrailingCommas = true,
                WriteIndented = true,
            };
        PaperLines = JsonSerializer.Deserialize<PaperText>(jason, options);
        return true;
    }

    protected override async Task OnInitializedAsync()
    {
        string entry = "100:1:5";
        bool ret= await GetParagraphs(entry);
    }

    protected override async void OnParametersSet()
    {
        if (Entry == null) Entry = "100:1:5";
        bool ret = await GetParagraphs(Entry);
    }

}
