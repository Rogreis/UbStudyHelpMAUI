@page "/"

@using AmadonBlazor.Classes;
@using AmadonBlazor.Data;
@using UbStandardObjects.Objects;
@inject IJSRuntime JS
@inject TOC_Service Service


<style>

        html, body {
            padding-top: 0px;
            padding-right: 0px;
            padding-bottom: 0px;
            padding-left: 0px;
            margin-top: 0px;
            margin-bottom: 0px;
            margin-right: 0px;
            margin-left: 0px;
            height: 100%;
    }

        .panelMain {
            padding-top: 0px;
            padding-right: 0px;
            padding-bottom: 0px;
            padding-left: 0px;
            margin-top: 0px;
            margin-bottom: 0px;
            margin-right: 0px;
            margin-left: 0px;
        height: 100%;
            width: 100%;
        }

        .panelLeft {
            height: @DivHeight;
            width: 25%;
            padding-top: 10px;
            padding-right: 10px;
            padding-bottom: 10px;
            padding-left: 10px;
        }

        .panelRight {
        height: @DivHeight;
        width: 75%;
        }


        .topnav {
            overflow: hidden;
            background-color: #e9e9e9;
            padding-top: 0px;
            padding-right: 0px;
            padding-bottom: 0px;
            padding-left: 0px;
            margin-top: 0px;
            margin-bottom: 0px;
            margin-right: 0px;
            margin-left: 0px;
    }

        .topnav a {
            float: left;
            display: block;
            color: black;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }

        .topnav a:hover {
            background-color: #ddd;
            color: black;
        }

        .topnav a.active {
            background-color: #2196F3;
            color: white;
        }

        .topnav .search-container {
            float: right;
        }

        .topnav input[type=text] {
            padding: 6px;
            margin-top: 8px;
            font-size: 17px;
            border: none;
        }

        .topnav .search-container button {
            float: right;
            padding: 6px 10px;
            margin-top: 8px;
            margin-right: 16px;
            background: #ddd;
            font-size: 17px;
            border: none;
            cursor: pointer;
        }

        .topnav .search-container button:hover {
            background: #ccc;
        }



</style>

<div class="topnav">
  <a class="active" href="#home">Home</a>
  <a href="#about">About</a>
  <a href="#contact">Contact</a>
  <div class="search-container">
    <form action="/action_page.php">
      <input type="text" placeholder="Search.." name="search">
      <button type="submit"><i class="fa fa-search"></i></button>
    </form>
  </div>
</div>


<div class="container-fluid panelMain">
    <div class="row">
        <div class="col-3 bg-dark text-white panelLeft overflow-auto">
            <TableOfContents OnEntryChanged=@NewEntry></TableOfContents>
        </div>
        <div class="col-9 bg-dark text-white panelRight overflow-auto">
            <TextFormat Entry=@EntryHref></TextFormat>
        </div>
    </div>
</div>

<div class="p-1 bg-dark text-white text-center">
    <p>Footer</p>
</div>




@code {

    // The application lifecycle methods in Blazor:https://www.syncfusion.com/faq/blazor/lifecycle/what-are-the-application-lifecycle-methods-in-blazor
    // Call JavaScript from Blazor: https://swimburger.net/blog/dotnet/communicating-between-dotnet-and-javascript-in-blazor-with-in-browser-samples#:~:text=To%20invoke%20JavaScript%20functions%20from,instance%20of%20the%20IJSRuntime%20interface.&text=You%20can%20now%20use%20the%20js%20variable%20throughout%20the%20component.&text=This%20method%20will%20invoke%20the,which%20JavaScript%20function%20to%20run.

    //protected override async Task OnInitializedAsync()
    //{
    //    string name = await JS.InvokeAsync<string>("prompt", "What is your name?");
    //    await JS.InvokeVoidAsync("alert", $"Hello {name}!");
    //}



    // Treeview from https://www.w3schools.com/howto/howto_js_treeview.asp

    private TOC_Table toc_table;

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string DivHeight { get; set; }

    [Parameter]
    public string EntryHref { get; set; }

    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }


    private async Task SetDimensions()
    {
        var dimension = await JS.InvokeAsync<WindowDimension>("getWindowDimensions");
        //Width = dimension.Width;

        DivHeight = $"{(dimension.Height - 120)}px";
    }

    protected override async Task OnInitializedAsync()
    {
        Title = "O Livro de Urântia";

        var dimension = await JS.InvokeAsync<WindowDimension>("getWindowDimensions");
        //Width = dimension.Width;

        DivHeight = $"{(dimension.Height-80)}px";
        EntryHref = "100:1:5";
        //await JS.InvokeAsync<object>("AddResizeHandler", "leftUbPanel");
        //await JS.InvokeAsync<object>("CallResizeHandler", "leftUbPanel");
    }

    private void NewEntry(string entryHref)
    {
        EntryHref = entryHref;
    }


    //protected override void OnSizeAllocated(double width, double height)
    //{
    //    base.OnSizeAllocated(width, height);

    //    //respond to size change below...
    //}


    /// <summary>
    /// The javascript inserted in the static page wwwroot\index.html is called after render for the fiorst time
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    //await JS.InvokeVoidAsync("alert", $"Hello OnAfterRenderAsync {firstRender}");
    //    //if (firstRender)
    //    //    await JS.InvokeVoidAsync("StartPanel", "");
    //}


}

