@foreach (MenuItem item in MenuItemList)
{
    @if (item.IsActive)
    {
        <a class="active" @onclick="args => MenuClicked(item.MenuCommand, args)">@item.MenuText</a>
    }
    else
    {
        <a @onclick="args => MenuClicked(item.MenuCommand, args)">@item.MenuText</a>
    }
}


@code {

    private class MenuItem
    {
        public string MenuText { get; set; }
        public string MenuCommand { get; set; }
        public bool IsActive { get; set; } = false;
    }

    private List<MenuItem> MenuItemList { get; set; } 

    private string Menu1 { get; set; } = "XXXCCC";

    protected override async Task OnInitializedAsync()
    {
        MenuItemList = new List<MenuItem>()
        {
            new MenuItem() { MenuText= "Paper Text", MenuCommand= "text", IsActive= true},
            new MenuItem() { MenuText= "Subject Index", MenuCommand= "index"},
            new MenuItem() { MenuText= "Advanced Search", MenuCommand= "search"},
            new MenuItem() { MenuText= "Track", MenuCommand= "track"},
            new MenuItem() { MenuText= "Settings", MenuCommand= "settings"},
        };
    }

    [Parameter]
    public EventCallback<string> OnMenuClicked { get; set; }


    private void MenuClicked(string action, MouseEventArgs args)
    {
        OnMenuClicked.InvokeAsync(action);
    }

}
