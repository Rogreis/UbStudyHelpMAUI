@using AmadonBlazor2.Data;
@using AmadonBlazorLibrary.UbClasses;

@inject Microsoft.AspNetCore.Components.NavigationManager Navigation
@inject IJSRuntime JS


@*    
@inject TOC_Service Service
*@

<h3>@Title</h3>

@if (@IsTocLoaded)
{
       <ul id="myUL">

        @foreach (TOC_Entry part in Parts)
        {
            <li>
                <span class="caret expandable">@part.Text</span>
                <ul class="nested">
                    @foreach (TOC_Entry paper in part.Papers)
                    {
                        <li>
                            <span class="caret"><a class="liIndex" @onclick="args => PaperClicked(paper, args)">@paper.Ident</a></span>
                            <ul class="nested">
                                @foreach (TOC_Entry sectionPaper in paper.Sections)
                                {
                                    <li><a class="liIndex p-3" @onclick="args => PaperClicked(sectionPaper, args)">@sectionPaper.Ident</a></li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </li>
        }
    </ul>
}
else
{
    <h2>Table of contents loading...</h2>
}


@code {
    private TOC_Table toc_table;

    [Parameter]
    public bool IsTocLoaded { get; set; } = false;

    [Parameter]
    public List<TOC_Entry> Parts { get; set; }

    [Parameter]
    public string Title { get; set; } = "Table of Contents";

    ///// <summary>
    ///// Fired when a new Entry must be shown
    ///// About eventshttps://blazor-university.com/components/component-events/
    ///// </summary>
    //public EventCallback<string> OnEntryChanged { get; set; }


    /// <summary>
    /// The javascript inserted in the static page wwwroot\index.html is called after render for the first time
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            toc_table = await TOC_Service.GetTocTableAsync(false);
            Title = toc_table.Title;
            Parts = toc_table.Parts;
            IsTocLoaded = true;
            StateHasChanged();
            await JS.InvokeVoidAsync("ExpandIndex", "");
         }
    }

    private void PaperClicked(TOC_Entry entry, MouseEventArgs args)
    {
        //OnEntryChanged.InvokeAsync(entry.Href);
        Navigation.NavigateTo($"/?{entry.Href}");
    }

}
